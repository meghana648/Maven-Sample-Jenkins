
pipeline {
     agent 
     {
        dockerfile{
            filename 'Dockerfile'
            args '-v /var/lib/jenkins:/var/lib/jenkins'
            reuseNode true
        }
    }
   
    environment
    {
        gitURL="https://github.com/meghana648/Maven-Sample-Jenkins.git"
    }
    stages {
        stage('Print Env Variables') {
            steps {
                echo "Print Env Variables"
                sh ''' 
                echo $WORKSPACE ${WORKSPACE}
                echo $JOB_NAME ${JOB_NAME}
                echo $BUILD_NUMBER ${BUILD_NUMBER}
                echo $JENKINS_HOME ${JENKINS_HOME} 
                echo "Jenkins Home: ${env.JENKINS_HOME}"
                '''
            }
        }
        stage('Checkout Source Code') {
            steps {
                git branch: 'main', url: env.gitURL // Replace with your repo URL
            }
        }
        stage('Build') {
              steps 
              {
                  script
                  {
                    try
                    {
                        configFileProvider([configFile(fileId: 'maven-settings', variable: 'MAVEN_SETTINGS_XML')]) 
                        {
                            sh '''
                                mvn --version
                                echo "Maven Settings: $MAVEN_SETTINGS_XML"
                                java -version
                                ls /usr/local/share/ca-certificates/
                              
                                update-alternatives --list java
                                which java
                           '''
                            sh 'mvn -Dmaven.test.skip=true clean package -s $MAVEN_SETTINGS_XML'
                            
                        }
                    }
                    catch (Exception e) 
                    {
                        echo 'Exception occurred: ' + e.toString()
                        echo "Caught an exception: ${e.message}"
                      //currentBuild.result = 'FAILURE'
                    }
                    
                  }
              }
        }
             
    }
     post {
        always {
                script {
                    echo "In post build script"
                    echo "Jenkins Home: ${env.JENKINS_HOME}"
                    echo "Workspace: ${env.WORKSPACE}"
                    echo "path:-  ${env.JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/"
                    def logOutput = sh(script: "cat ${env.JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/log", returnStdout: true).trim()
                    echo "After logoutput"
                    def searchTerm = "status code: 403"
                    def grepOutput = sh(script: "echo \"${logOutput}\" | grep \"${searchTerm}\"", returnStdout: true).trim()
                    echo "After grepoutput"
                    def cleanedErrors = sh(script: "echo \"${grepOutput}\" | sed -E \"s/^.*\\\\[ERROR\\\\]//\"", returnStdout: true).trim()
                     echo "After cleanedErrors"
                 //   echo "GrepOutput: ${grepOutput}"
                  //  echo "Cleaned Errors: ${cleanedErrors}"
                    echo "Write file in post build script"
                    writeFile file: '${env.WORKSPACE}/captured_urls_403.txt', text: cleanedErrors   
                    echo "Write the output to captured_urls_403.txt file"
                }
          //  cleanWs()
        }
    }
  
}